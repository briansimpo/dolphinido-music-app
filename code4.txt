<script setup>
const config = useRuntimeConfig()
const { token } = useAuthService()

const { genres } = useGenres()
const { uploadSongDialog } = useSongDialog()
const { errorMessage } = useToastMessage()

const datalist = ref([])
const lastPage = ref(1)
const pending = ref(false)

const filter = ref({
  genre: null,
  sort: null,
  page: 1,
  limit: 2
})

const sortings = ref([
  'title',
  'artist',
  'album',
  'year'
])

onMounted(() => {
  loadData()
})

watch(filter.value, () => {
  filterData()
})

const loadData = async () => {
  if (pending.value) {
    return
  }
  pending.value = true
  const response = await fetch('/portal/songs', filter.value)
  appendData(response.data)
  lastPage.value = response.meta.last_page
  pending.value = false
}

const filterData = async () => {
  if (pending.value) {
    return
  }
  filter.value.page = lastPage.value
  pending.value = true
  const response = await fetch('/portal/songs', filter.value)
  datalist.value = response.data
  lastPage.value = response.meta.last_page
  pending.value = false
}

const loadMore = () => {
  if (filter.value.page <= lastPage.value) {
    filter.value.page += 1
    loadData()
  }
}

const fetch = async (url, params) => {
  try {
    const response = await $fetch(url, {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token.value}`
      },
      baseURL: config.public.apiBase,
      params
    })

    return response
  } catch (error) {
    errorMessage(error)
  }
}

const appendData = (data) => {
  if (data.length > 0) {
    data.forEach((item) => {
      if (!datalist.value.includes(item.value)) {
        datalist.value.push(item)
      }
    })
  }
}
</script>
<template>
  <div class="list list--lg mt-5">
    <div v-if="pending">
      <StateLoader />
    </div>
    <div v-else>
      <div v-if="datalist.length > 0" class="row mb-6">
        <div class="col-lg-6 mb-2">
          <Button icon="pi pi-upload" label="Upload" @click="uploadSongDialog" />
        </div>
        <div class="col-lg-6">
          <div class="row">
            <div class="col-lg-6 mb-2">
              <div class="p-float-label">
                <Dropdown
                  v-model="filter.genre"
                  filter
                  show-clear
                  :options="genres"
                  option-value="id"
                  option-label="name"
                  placeholder="Genre"
                  class="w-full flex"
                  required
                />
                <label for="dd-city">Genre</label>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="p-float-label">
                <Dropdown
                  v-model="filter.sort"
                  show-clear
                  :options="sortings"
                  placeholder="Sort By"
                  class="w-full flex"
                  required
                />
                <label for="dd-city">Sort By</label>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div v-if="datalist.length > 0" class="row">
        <div class="col-lg-12">
          <div v-for="song in datalist" :key="song.id">
            <SongListItem :song="song" class="mb-2" />
          </div>
          <div class="mt-5 text-center">
            <LoadMoreButton @click="loadMore" />
          </div>
        </div>
      </div>
      <div v-else class="row">
        <div class="text-center mb-4">
          <p class="display-5 email">
            You do not have any songs
          </p>
          <Button icon="pi pi-upload" label="Add new song" @click="uploadSongDialog" />
        </div>
      </div>
    </div>
  </div>
</template>
