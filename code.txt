<script setup>
const config = useRuntimeConfig()
const { token } = useAuthService()

const { genres } = useGenres()
const { uploadSongDialog } = useSongDialog()

const datalist = ref([])
const pending = ref(false)

const filter = ref({
  genre: null,
  sort: null,
  page: 1,
  limit: 10
})

const sortings = ref(['title', 'artist', 'album', 'release_year'])

function loadMore () {
  filter.value.page += 1
  loadData()
}

async function loadData () {
  try {
    const response = await fetch(`${config.public.apiBase}/portal/songs`, {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token.value}`
      },
      params: filter.value
    })
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`)
    }
    const data = await response.json()
    if (data) {
      data.forEach((item) => {
        datalist.value.push(item)
      })
    }
    pending.value = false
  } catch (error) {
    errorMessage(error)
    pending.value = false
  }
}

</script>
<template>
  <div class="list list--lg mt-5">
    <div class="row mb-6">
      <div class="col-lg-6 mb-2">
        <Button icon="pi pi-upload" label="Upload" @click="uploadSongDialog" />
      </div>
      <div class="col-lg-6">
        <div class="row">
          <div class="col-lg-6 mb-2">
            <div class="p-float-label">
              <Dropdown
                v-model="filter.genre"
                filter
                show-clear
                :options="genres"
                option-value="id"
                option-label="name"
                placeholder="Genre"
                class="w-full flex"
                required
              />
              <label for="dd-city">Genre</label>
            </div>
          </div>
          <div class="col-lg-6">
            <div class="p-float-label">
              <Dropdown
                v-model="filter.sort"
                show-clear
                :options="sortings"
                placeholder="Sort By"
                class="w-full flex"
                required
              />
              <label for="dd-city">Sort By</label>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div v-if="songs.length" class="row">
      <div v-if="pending">
        <StateLoader />
      </div>
      <div>
        <div v-for="song in songs" :key="song.id" class="col-xl-12 mb-2">
          <SongListItem :song="song" class="mb-2" />
        </div>
        <div class="mt-5 text-center">
          <LoadMoreButton @click="loadMore" />
        </div>
      </div>
    </div>
  </div>
  <div v-if="!songs.length && !pending" class="row">
    <div class="text-center mb-4">
      <p class="display-5 email">
        You do not have any songs
      </p>
      <Button icon="pi pi-upload" label="Add new song" @click="uploadSongDialog" />
    </div>
  </div>
</template>
