<script setup>
const config = useRuntimeConfig()
const { token } = useAuthService()
const { errorMessage } = useToastMessage()

const { genres } = useGenres()
const { uploadSongDialog } = useSongDialog()

const datalist = ref([])
const pending = ref(false)
const lastPage = ref(1)

const filter = ref({
  genre: null,
  sort: null,
  page: 1,
  limit: 5
})

const sortings = ref([
  'title',
  'artist',
  'album',
  'release_year'
])

loadData()

async function loadData () {
  try {
    // Set loading indicator to true
    pending.value = true

    // Fetch the data
    const { data, error } = await useFetch('/portal/songs', {
      method: 'GET',
      baseURL: config.public.apiBase,
      headers: { Authorization: `Bearer ${token.value}` },
      params: filter.value,
      watch: [filter]
    })

    // Handle the response
    if (data && data.value) {
      appendData(data.value.data)
      lastPage.value = data.value.meta.last_page
    } else {
      // Handle errors
      errorMessage(error && error.value)
    }
  } catch (err) {
    // Handle unexpected errors
    errorMessage('An unexpected error occurred.')
  } finally {
    // Set loading indicator to false
    pending.value = false
  }
}

function loadMore () {
  if (filter.value.page <= lastPage.value) {
    filter.value.page += 1
    loadData()
  }
}

function appendData (data) {
  data.forEach((item) => {
    datalist.value.push(item)
  })
}

</script>
<template>
  <div class="list list--lg mt-5">
    <div v-if="pending">
      <StateLoader />
    </div>
    <div v-else>
      <div v-if="datalist.length > 0" class="row mb-6">
        <div class="col-lg-6 mb-2">
          <Button icon="pi pi-upload" label="Upload" @click="uploadSongDialog" />
        </div>
        <div class="col-lg-6">
          <div class="row">
            <div class="col-lg-6 mb-2">
              <div class="p-float-label">
                <Dropdown
                  v-model="filter.genre"
                  filter
                  show-clear
                  :options="genres"
                  option-value="id"
                  option-label="name"
                  placeholder="Genre"
                  class="w-full flex"
                  required
                />
                <label for="dd-city">Genre</label>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="p-float-label">
                <Dropdown
                  v-model="filter.sort"
                  show-clear
                  :options="sortings"
                  placeholder="Sort By"
                  class="w-full flex"
                  required
                />
                <label for="dd-city">Sort By</label>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div v-if="datalist.length > 0" class="row">
        <div class="col-lg-12">
          <div v-for="song in datalist" :key="song.id">
            <SongListItem :song="song" class="mb-2" />
          </div>
          <div v-if="filter.page <= lastPage" class="mt-5 text-center">
            <LoadMoreButton @click="loadMore" />
          </div>
        </div>
      </div>
      <div v-else class="row">
        <div class="text-center mb-4">
          <p class="display-5 email">
            You do not have any songs
          </p>
          <Button icon="pi pi-upload" label="Add new song" @click="uploadSongDialog" />
        </div>
      </div>
    </div>
  </div>
</template>
